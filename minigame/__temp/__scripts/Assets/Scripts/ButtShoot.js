"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var engine_1 = require("engine");
var eventCenter_1 = require("./eventCenter");
var ButtShoot = (function (_super) {
    tslib_1.__extends(ButtShoot, _super);
    function ButtShoot(entity) {
        var _this = _super.call(this, entity) || this;
        _this.entity = entity;
        _this.uisprite = null;
        _this.uiInput = null;
        _this.onTouchStart = _this.onTouchStart.bind(_this);
        _this.onTouchEnter = _this.onTouchEnter.bind(_this);
        _this.onTouchEnd = _this.onTouchEnd.bind(_this);
        _this.onTouchLeave = _this.onTouchLeave.bind(_this);
        return _this;
    }
    ButtShoot.prototype.onAwake = function () {
        this.uisprite = this.entity.getComponent(engine_1.default.UISprite);
    };
    ButtShoot.prototype.onEnable = function () {
        this.uiInput = this.getComponent(engine_1.default.TouchInputComponent);
        if (this.uiInput) {
            this.uiInput.onTouchStart.add(this.onTouchStart);
            this.uiInput.onTouchEnter.add(this.onTouchEnter);
            this.uiInput.onTouchEnd.add(this.onTouchEnd);
            this.uiInput.onTouchLeave.add(this.onTouchLeave);
        }
    };
    ButtShoot.prototype.onDisable = function () {
        if (this.uiInput) {
            this.uiInput.onTouchStart.remove(this.onTouchStart);
            this.uiInput.onTouchEnter.remove(this.onTouchEnter);
            this.uiInput.onTouchEnd.remove(this.onTouchEnd);
            this.uiInput.onTouchLeave.remove(this.onTouchLeave);
        }
    };
    ButtShoot.prototype.onTouchStart = function (s, e) {
        var c = this.uisprite.color.clone();
        c.a = 200;
        this.uisprite.color = c;
        eventCenter_1.default.emit(eventCenter_1.default.START_SHOOT);
    };
    ButtShoot.prototype.onTouchEnter = function (s, e) {
        var c = this.uisprite.color.clone();
        c.a = 200;
        this.uisprite.color = c;
        eventCenter_1.default.emit(eventCenter_1.default.START_SHOOT);
    };
    ButtShoot.prototype.onTouchEnd = function (s, e) {
        var c = this.uisprite.color.clone();
        c.a = 255;
        this.uisprite.color = c;
        eventCenter_1.default.emit(eventCenter_1.default.END_SHOOT);
    };
    ButtShoot.prototype.onTouchLeave = function (s, e) {
        var c = this.uisprite.color.clone();
        c.a = 255;
        this.uisprite.color = c;
        eventCenter_1.default.emit(eventCenter_1.default.END_SHOOT);
    };
    ButtShoot = tslib_1.__decorate([
        engine_1.default.decorators.serialize("ButtShoot")
    ], ButtShoot);
    return ButtShoot;
}(engine_1.default.Script));
exports.default = ButtShoot;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFzc2V0cy9TY3JpcHRzL0J1dHRTaG9vdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBNEI7QUFHNUIsNkNBQStCO0FBRS9CO0lBQXVDLHFDQUFhO0lBS2xELG1CQUE0QixNQUFnQjtRQUE1QyxZQUNFLGtCQUFNLE1BQU0sQ0FBQyxTQUtkO1FBTjJCLFlBQU0sR0FBTixNQUFNLENBQVU7UUFIckMsY0FBUSxHQUEyQixJQUFJLENBQUM7UUFDeEMsYUFBTyxHQUFzQyxJQUFJLENBQUM7UUFJdkQsS0FBSSxDQUFDLFlBQVksR0FBRyxLQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsQ0FBQztRQUNqRCxLQUFJLENBQUMsWUFBWSxHQUFHLEtBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUksQ0FBQyxDQUFDO1FBQ2pELEtBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLENBQUM7UUFDN0MsS0FBSSxDQUFDLFlBQVksR0FBRyxLQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsQ0FBQzs7SUFDbkQsQ0FBQztJQUVNLDJCQUFPLEdBQWQ7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFrQixnQkFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdFLENBQUM7SUFDTSw0QkFBUSxHQUFmO1FBQ0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUE2QixnQkFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDekYsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDakQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNqRCxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQzdDLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDbEQ7SUFDSCxDQUFDO0lBRU0sNkJBQVMsR0FBaEI7UUFDRSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNwRCxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3BELElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDaEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNyRDtJQUNILENBQUM7SUFFTSxnQ0FBWSxHQUFuQixVQUFvQixDQUE2QixFQUFFLENBQWtCO1FBQ25FLElBQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3RDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO1FBQ1YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ3hCLHFCQUFFLENBQUMsSUFBSSxDQUFDLHFCQUFFLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVNLGdDQUFZLEdBQW5CLFVBQW9CLENBQTZCLEVBQUUsQ0FBa0I7UUFDbkUsSUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDdEMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7UUFDVixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDeEIscUJBQUUsQ0FBQyxJQUFJLENBQUMscUJBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRU0sOEJBQVUsR0FBakIsVUFBa0IsQ0FBNkIsRUFBRSxDQUFrQjtRQUNqRSxJQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN0QyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztRQUNWLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUN4QixxQkFBRSxDQUFDLElBQUksQ0FBQyxxQkFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3hCLENBQUM7SUFFTSxnQ0FBWSxHQUFuQixVQUFvQixDQUE2QixFQUFFLENBQWtCO1FBQ25FLElBQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3RDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO1FBQ1YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ3hCLHFCQUFFLENBQUMsSUFBSSxDQUFDLHFCQUFFLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQTdEa0IsU0FBUztRQUQ3QixnQkFBTSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDO09BQ3BCLFNBQVMsQ0ErRDdCO0lBQUQsZ0JBQUM7Q0EvREQsQUErREMsQ0EvRHNDLGdCQUFNLENBQUMsTUFBTSxHQStEbkQ7a0JBL0RvQixTQUFTIiwiZmlsZSI6IkFzc2V0cy9TY3JpcHRzL0J1dHRTaG9vdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlbmdpbmUgZnJvbSBcImVuZ2luZVwiO1xuaW1wb3J0IHsgVG91Y2hJbnB1dEV2ZW50IH0gZnJvbSBcImVuZ2luZS9pbnB1dC90b3VjaFwiO1xuaW1wb3J0IHsgRW50aXR5MkQgfSBmcm9tIFwiZW5naW5lL3NjZW5lL3NjZW5lXCI7XG5pbXBvcnQgRUMgZnJvbSBcIi4vZXZlbnRDZW50ZXJcIjtcbkBlbmdpbmUuZGVjb3JhdG9ycy5zZXJpYWxpemUoXCJCdXR0U2hvb3RcIilcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1dHRTaG9vdCBleHRlbmRzIGVuZ2luZS5TY3JpcHQge1xuXG4gIHB1YmxpYyB1aXNwcml0ZTogZW5naW5lLlVJU3ByaXRlIHwgbnVsbCA9IG51bGw7XG4gIHB1YmxpYyB1aUlucHV0OiBlbmdpbmUuVG91Y2hJbnB1dENvbXBvbmVudCB8IG51bGwgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZWFkb25seSBlbnRpdHk6IEVudGl0eTJEKSB7XG4gICAgc3VwZXIoZW50aXR5KTtcbiAgICB0aGlzLm9uVG91Y2hTdGFydCA9IHRoaXMub25Ub3VjaFN0YXJ0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5vblRvdWNoRW50ZXIgPSB0aGlzLm9uVG91Y2hFbnRlci5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25Ub3VjaEVuZCA9IHRoaXMub25Ub3VjaEVuZC5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25Ub3VjaExlYXZlID0gdGhpcy5vblRvdWNoTGVhdmUuYmluZCh0aGlzKTtcbiAgfVxuXG4gIHB1YmxpYyBvbkF3YWtlKCkge1xuICAgIHRoaXMudWlzcHJpdGUgPSB0aGlzLmVudGl0eS5nZXRDb21wb25lbnQ8ZW5naW5lLlVJU3ByaXRlPihlbmdpbmUuVUlTcHJpdGUpO1xuICB9XG4gIHB1YmxpYyBvbkVuYWJsZSgpOiB2b2lkIHtcbiAgICB0aGlzLnVpSW5wdXQgPSB0aGlzLmdldENvbXBvbmVudDxlbmdpbmUuVG91Y2hJbnB1dENvbXBvbmVudD4oZW5naW5lLlRvdWNoSW5wdXRDb21wb25lbnQpO1xuICAgIGlmICh0aGlzLnVpSW5wdXQpIHtcbiAgICAgIHRoaXMudWlJbnB1dC5vblRvdWNoU3RhcnQuYWRkKHRoaXMub25Ub3VjaFN0YXJ0KTtcbiAgICAgIHRoaXMudWlJbnB1dC5vblRvdWNoRW50ZXIuYWRkKHRoaXMub25Ub3VjaEVudGVyKTtcbiAgICAgIHRoaXMudWlJbnB1dC5vblRvdWNoRW5kLmFkZCh0aGlzLm9uVG91Y2hFbmQpO1xuICAgICAgdGhpcy51aUlucHV0Lm9uVG91Y2hMZWF2ZS5hZGQodGhpcy5vblRvdWNoTGVhdmUpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvbkRpc2FibGUoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMudWlJbnB1dCkge1xuICAgICAgdGhpcy51aUlucHV0Lm9uVG91Y2hTdGFydC5yZW1vdmUodGhpcy5vblRvdWNoU3RhcnQpO1xuICAgICAgdGhpcy51aUlucHV0Lm9uVG91Y2hFbnRlci5yZW1vdmUodGhpcy5vblRvdWNoRW50ZXIpO1xuICAgICAgdGhpcy51aUlucHV0Lm9uVG91Y2hFbmQucmVtb3ZlKHRoaXMub25Ub3VjaEVuZCk7XG4gICAgICB0aGlzLnVpSW5wdXQub25Ub3VjaExlYXZlLnJlbW92ZSh0aGlzLm9uVG91Y2hMZWF2ZSk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG9uVG91Y2hTdGFydChzOiBlbmdpbmUuVG91Y2hJbnB1dENvbXBvbmVudCwgZTogVG91Y2hJbnB1dEV2ZW50KSB7XG4gICAgY29uc3QgYyA9IHRoaXMudWlzcHJpdGUuY29sb3IuY2xvbmUoKTtcbiAgICBjLmEgPSAyMDA7XG4gICAgdGhpcy51aXNwcml0ZS5jb2xvciA9IGM7XG4gICAgRUMuZW1pdChFQy5TVEFSVF9TSE9PVCk7XG4gIH1cblxuICBwdWJsaWMgb25Ub3VjaEVudGVyKHM6IGVuZ2luZS5Ub3VjaElucHV0Q29tcG9uZW50LCBlOiBUb3VjaElucHV0RXZlbnQpIHtcbiAgICBjb25zdCBjID0gdGhpcy51aXNwcml0ZS5jb2xvci5jbG9uZSgpO1xuICAgIGMuYSA9IDIwMDtcbiAgICB0aGlzLnVpc3ByaXRlLmNvbG9yID0gYztcbiAgICBFQy5lbWl0KEVDLlNUQVJUX1NIT09UKTtcbiAgfVxuXG4gIHB1YmxpYyBvblRvdWNoRW5kKHM6IGVuZ2luZS5Ub3VjaElucHV0Q29tcG9uZW50LCBlOiBUb3VjaElucHV0RXZlbnQpIHtcbiAgICBjb25zdCBjID0gdGhpcy51aXNwcml0ZS5jb2xvci5jbG9uZSgpO1xuICAgIGMuYSA9IDI1NTtcbiAgICB0aGlzLnVpc3ByaXRlLmNvbG9yID0gYztcbiAgICBFQy5lbWl0KEVDLkVORF9TSE9PVCk7XG4gIH1cblxuICBwdWJsaWMgb25Ub3VjaExlYXZlKHM6IGVuZ2luZS5Ub3VjaElucHV0Q29tcG9uZW50LCBlOiBUb3VjaElucHV0RXZlbnQpIHtcbiAgICBjb25zdCBjID0gdGhpcy51aXNwcml0ZS5jb2xvci5jbG9uZSgpO1xuICAgIGMuYSA9IDI1NTtcbiAgICB0aGlzLnVpc3ByaXRlLmNvbG9yID0gYztcbiAgICBFQy5lbWl0KEVDLkVORF9TSE9PVCk7XG4gIH1cblxufVxuIl19
